buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	configurations {
		compile.exclude module: "spring-boot-starter-tomcat"
		compile.exclude module: "commons-logging"
	}

	ext {
		springBootVersion = "2.2.6.RELEASE"
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
	}
}

apply plugin: 'org.sonarqube'

group = 'com.experimentspb'
//加上这个之后打出来的包名为  experimentspb-0.0.1-SNAPSHOT.jar
//version = '0.0.1-SNAPSHOT'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
	maven { url 'http://192.168.118.127:8081/repository/maven-public/' }
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"
dependencies {
	compile("org.springframework.boot:spring-boot-starter-undertow:$springBootVersion")
	compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
	compile("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
	compile("org.springframework.boot:spring-boot-starter-cache:$springBootVersion")
	compile ("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
	
	//监控相关
	compile(
			"org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
	)
	compile(
			"io.springfox:springfox-swagger2:2.6.1",
			"io.springfox:springfox-swagger-ui:2.6.1"
	)
	//httpClient 解决连接nacos时报缺少包 NoClassDefFoundError: org/apache/http/impl/client/HttpClientBuilder
	compile 'org.apache.httpcomponents:httpclient:4.5.6'
	
	//Apollo
	compile 'com.ctrip.framework.apollo:apollo-client:1.2.0'
	//sentinel
	compile 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel:2.2.1.RELEASE'

	//日志
	compile(
			"net.logstash.logback:logstash-logback-encoder:4.11",
			"org.projectlombok:lombok:1.18.8"
	)
	//Nacos服务发现
//	compile 'com.alibaba.cloud:spring-cloud-alibaba-nacos-discovery:2.2.0.RELEASE'
	

	//加载本地依赖
	compile fileTree(dir: 'lib', include: ['*.jar'])
}

def jarName = rootProject.name + ".jar"

build.mustRunAfter clean
task buildJar(dependsOn: [build,clean]) {
	doLast {
		copy() {
			from("build/libs/" + jarName)
			into "build"
			from("dist")
			into "build"
		}
		file("build/classes").deleteDir()
		file("build/generated").deleteDir()
		file("build/libs").deleteDir()
		file("build/reports").deleteDir()
		file("build/resources").deleteDir()
		file("build/test-results").deleteDir()
		file("build/tmp").deleteDir()

		def fileDev = file("build/dev")
		def fileTest = file("build/test")
		def fileProd = file("build/prod")
		def fileJar = file("build/" + jarName)
		fileDev.delete()
		fileDev.mkdirs()
		fileTest.delete()
		fileTest.mkdirs()
		fileProd.delete()
		fileProd.mkdirs()
		["build/dev", "build/test", "build/prod"].each { dest ->
			copy {
				from "build/" + fileJar.getName()
				into dest
				from("dist/springBoot.sh")
				into dest
				from("dist/application_".concat(dest.replace('build/','')).concat(".yml"))
				into dest
				rename { String fileName ->
					fileName.replace('_'.concat(dest.replace('build/','')), '')
				}
			}
		}
		fileJar.delete()
		file("build/application_dev.yml").delete()
		file("build/application_test.yml").delete()
		file("build/application_prod.yml").delete()
		file("build/springBoot.sh").delete()
	}
}